function addEventListeners(){for(var t=document.getElementsByClassName("checkbox"),e=0;e<t.length;e++)t[e].addEventListener("click",toggleCheckbox)}function toggleCheckbox(){var t=this.parentElement.parentElement;this.parentElement.dataset.points;this.classList.contains("active")||"false"!=t.dataset.selectionMade?this.classList.contains("active")&&(this.classList.remove("active"),t.setAttribute("data-selection-made",!1)):(this.classList.add("active"),1,t.setAttribute("data-selection-made",!0))}function ballotSetup(){for(var t=document.getElementsByClassName("ballot"),e=0;e<t.length;e++){!function(t){for(var e=[{candidateID:"candidateA",candidateDisplay:"Candidate A"},{candidateID:"candidateB",candidateDisplay:"Candidate B"},{candidateID:"candidateC",candidateDisplay:"Candidate C"}],a=0;a<e.length;a++){var n=document.createElement("div");n.classList.add("candidate");var d=e[a].candidateID;n.classList.add(d),n.setAttribute("data-candidate-ID",d),n.setAttribute("data-points",0);var i=document.createElement("div");i.innerHTML=e[a].candidateDisplay,n.appendChild(i),t.classList.contains("fptp")&&function(t){var e=document.createElement("div");e.classList.add("checkbox"),t.appendChild(e)}(n),t.appendChild(n)}}(t[e]);var a=document.createElement("div");a.classList.add("submit"),a.innerHTML="Submit Ballot",t[e].appendChild(a),t[e].classList.contains("fptp")&&(console.log("fptp"),t[e].setAttribute("data-selection-made",!1))}}function pageSetup(){ballotSetup(),addEventListeners()}pageSetup();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
